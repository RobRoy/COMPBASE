//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2014.01.25 at 01:58:00 AM CET 
//


package org.w3._2002._07.owl;

import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlElements;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for DisjointUnion complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="DisjointUnion">
 *   &lt;complexContent>
 *     &lt;extension base="{http://www.w3.org/2002/07/owl#}ClassAxiom">
 *       &lt;sequence>
 *         &lt;element ref="{http://www.w3.org/2002/07/owl#}Class"/>
 *         &lt;group ref="{http://www.w3.org/2002/07/owl#}ClassExpression" maxOccurs="unbounded" minOccurs="2"/>
 *       &lt;/sequence>
 *     &lt;/extension>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "DisjointUnion", propOrder = {
    "clazz",
    "classExpression"
})
public class DisjointUnion
    extends ClassAxiom
{

    @XmlElement(name = "Class", required = true)
    protected Class clazz;
    @XmlElements({
        @XmlElement(name = "Class", type = Class.class),
        @XmlElement(name = "ObjectIntersectionOf", type = ObjectIntersectionOf.class),
        @XmlElement(name = "ObjectUnionOf", type = ObjectUnionOf.class),
        @XmlElement(name = "ObjectComplementOf", type = ObjectComplementOf.class),
        @XmlElement(name = "ObjectOneOf", type = ObjectOneOf.class),
        @XmlElement(name = "ObjectSomeValuesFrom", type = ObjectSomeValuesFrom.class),
        @XmlElement(name = "ObjectAllValuesFrom", type = ObjectAllValuesFrom.class),
        @XmlElement(name = "ObjectHasValue", type = ObjectHasValue.class),
        @XmlElement(name = "ObjectHasSelf", type = ObjectHasSelf.class),
        @XmlElement(name = "ObjectMinCardinality", type = ObjectMinCardinality.class),
        @XmlElement(name = "ObjectMaxCardinality", type = ObjectMaxCardinality.class),
        @XmlElement(name = "ObjectExactCardinality", type = ObjectExactCardinality.class),
        @XmlElement(name = "DataSomeValuesFrom", type = DataSomeValuesFrom.class),
        @XmlElement(name = "DataAllValuesFrom", type = DataAllValuesFrom.class),
        @XmlElement(name = "DataHasValue", type = DataHasValue.class),
        @XmlElement(name = "DataMinCardinality", type = DataMinCardinality.class),
        @XmlElement(name = "DataMaxCardinality", type = DataMaxCardinality.class),
        @XmlElement(name = "DataExactCardinality", type = DataExactCardinality.class)
    })
    protected List<ClassExpression> classExpression;

    /**
     * Gets the value of the clazz property.
     * 
     * @return
     *     possible object is
     *     {@link Class }
     *     
     */
    public Class getClazz() {
        return clazz;
    }

    /**
     * Sets the value of the clazz property.
     * 
     * @param value
     *     allowed object is
     *     {@link Class }
     *     
     */
    public void setClazz(Class value) {
        this.clazz = value;
    }

    /**
     * Gets the value of the classExpression property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the classExpression property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getClassExpression().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link Class }
     * {@link ObjectIntersectionOf }
     * {@link ObjectUnionOf }
     * {@link ObjectComplementOf }
     * {@link ObjectOneOf }
     * {@link ObjectSomeValuesFrom }
     * {@link ObjectAllValuesFrom }
     * {@link ObjectHasValue }
     * {@link ObjectHasSelf }
     * {@link ObjectMinCardinality }
     * {@link ObjectMaxCardinality }
     * {@link ObjectExactCardinality }
     * {@link DataSomeValuesFrom }
     * {@link DataAllValuesFrom }
     * {@link DataHasValue }
     * {@link DataMinCardinality }
     * {@link DataMaxCardinality }
     * {@link DataExactCardinality }
     * 
     * 
     */
    public List<ClassExpression> getClassExpression() {
        if (classExpression == null) {
            classExpression = new ArrayList<ClassExpression>();
        }
        return this.classExpression;
    }

}
