<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

	<!-- POM file generated with GWT webAppCreator -->
	<modelVersion>4.0.0</modelVersion>
	<groupId>uzuzjmd.competence</groupId>
	<artifactId>gui</artifactId>
	<packaging>war</packaging>
	<version>0.0.1-SNAPSHOT</version>
	<name>Competence GWT Application</name>


	<repositories>
		<repository>
			<id>fusesource-snapshots</id>
			<name>Fusesource Snapshots</name>
			<url>http://repo.fusesource.com/nexus/content/repositories/snapshots</url>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
			<releases>
				<enabled>true</enabled>
			</releases>
		</repository>
		<repository>
			<id>jboss-3rd-party-releases</id>
			<url>https://repository.jboss.org/nexus/content/repositories/thirdparty-releases/</url>
		</repository>
		<repository>
			<id>gwt-maven</id>
			<url>
         http://gwt-maven.googlecode.com/svn/trunk/mavenrepo/
       </url>
		</repository>
	</repositories>

	<properties>
		<!-- Convenience property to set the GWT version -->
		<gwtVersion>2.6.1</gwtVersion>
		<!-- GWT needs at least java 1.5 -->
<!-- 		<webappDirectory>${project.build.directory}/${project.build.finalName}</webappDirectory> -->
		<webappDirectory>src/main/webapp</webappDirectory>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<gwtSdkFirstInClasspath>true</gwtSdkFirstInClasspath>
		<superDevMode>false</superDevMode>		
	</properties>

	<dependencies>
	
<!-- 	   GWT  -->

		<dependency>
			<groupId>com.google.gwt</groupId>
			<artifactId>gwt-user</artifactId>
			<version>${gwtVersion}</version>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>com.google.gwt</groupId>
			<artifactId>gwt-servlet</artifactId>
			<version>${gwtVersion}</version>
			<scope>runtime</scope>
		</dependency>

<!-- 		<dependency> -->
<!-- 			<groupId>com.google.gwt</groupId> -->
<!-- 			<artifactId>gwt-codeserver</artifactId> -->
<!-- 			<version>2.6.1</version> -->
<!-- 			<scope>provided</scope> -->
<!-- 		</dependency> -->

		<dependency>
			<groupId>com.gwtext</groupId>
			<artifactId>gwtext</artifactId>
			<version>2.0.5</version>
		</dependency>

		<dependency>
			<groupId>com.github.gwtbootstrap</groupId>
			<artifactId>gwt-bootstrap</artifactId>
			<version>2.3.2.0</version>
		</dependency>

		<dependency>
			<groupId>org.fusesource.restygwt</groupId>
			<artifactId>restygwt</artifactId>
			<version>1.4</version>
		</dependency>

		<dependency>
			<groupId>com.googlecode.gwtquery</groupId>
			<artifactId>gwtquery</artifactId>
			<version>1.4.1</version>
			<!-- If you are using old versions of gwt, use version 1.1.0 of GwtQuery 
				and uncomment the appropriate line -->
			<!-- <version>1.1.0</version> -->
			<!-- <classifier>2.1.0</classifier> -->
			<!-- <classifier>2.0.1</classifier> -->
		</dependency>

		<dependency>
			<groupId>org.eclipse.jetty</groupId>
			<artifactId>jetty-maven-plugin</artifactId>
			<version>9.2.10.v20150310</version>
			<scope>provided</scope>
		</dependency>


	</dependencies>

	<build>
		<!-- Generate compiled stuff in the folder used for developing mode -->
		<outputDirectory>${webappDirectory}/WEB-INF/classes</outputDirectory>

		<plugins>

			<plugin>
				<groupId>org.eclipse.jetty</groupId>
				<artifactId>jetty-maven-plugin</artifactId>
				<version>9.2.10.v20150310</version>
				<configuration>
					<scanIntervalSeconds>10</scanIntervalSeconds>
					<war>${project.basedir}/src/main/webapp</war>
				</configuration>
			</plugin>

			<!-- GWT Maven Plugin -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>gwt-maven-plugin</artifactId>
				<version>${gwtVersion}</version>
				<executions>
					<execution>
						<goals>
							<goal>compile</goal>													
							<goal>generateAsync</goal>
						</goals>
					</execution>
				</executions>
				<!-- Plugin configuration. There are many available options, see gwt-maven-plugin 
					documentation at codehaus.org -->
				<configuration>
					<runTarget>Competence-webapp.html</runTarget>
					<hostedWebapp>${webappDirectory}</hostedWebapp>
					<i18nMessagesBundle>uzuzjmd.competence.gui.client.Messages</i18nMessagesBundle>
					<superDevMode>false</superDevMode>
					<draftCompile>true</draftCompile>
					<forceCompilation>true</forceCompilation>
					<style>DETAILED</style>
				</configuration>
			</plugin>

			<!-- Copy static web files before executing gwt:run -->
<!-- 			<plugin> -->
<!-- 				<groupId>org.apache.maven.plugins</groupId> -->
<!-- 				<artifactId>maven-war-plugin</artifactId> -->
<!-- 				<version>2.4</version> -->
<!-- 				<configuration> -->
<!-- 					<webappDirectory>${webappDirectory}</webappDirectory> -->
<!-- 					<attachClasses>true</attachClasses> -->
<!-- 					<packagingExcludes>WEB-INF/lib/*.jar</packagingExcludes> -->
<!-- 				</configuration> -->
<!-- 			</plugin> -->
		
		</plugins>

		<!-- This is necessary so the widget can be reused in vaadin -->
		<resources>
			<resource>
				<directory>src/main/java</directory>
				<includes>
					<include>**/*.java</include>
					<include>**/*.gwt.xml</include>
					<include>**/*.ui.xml</include>
				</includes>
			</resource>
			<resource>
				<directory>src/main/resources</directory>
				<includes>
					<include>**/*.java</include>
					<include>**/*.gwt.xml</include>
					<include>**/*.properties</include>
				</includes>
			</resource>
		</resources>
	</build>

</project>
